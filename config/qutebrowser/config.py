# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
# config.load_autoconfig()

# Turn on Qt HighDPI scaling. This is equivalent to setting
# QT_AUTO_SCREEN_SCALE_FACTOR=1 in the environment. It's off by default
# as it can cause issues with some bitmap fonts. As an alternative to
# this, it's possible to set font sizes and the `zoom.default` setting.
# Type: Bool
c.qt.highdpi = False

# Whitelist these host (doesn't seem to work)
config.set('content.host_blocking.whitelist', ['eb.dk'])

# Use QtWebKit (like in Safari)
c.backend = 'webkit'

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'file://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Duration (in milliseconds) to wait before removing finished downloads
c.downloads.remove_finished = 5000

# Value to send in the 'DNT' header. When this is set to true,
# qutebrowser asks websistes to not track your identity. If set to null,
# the DNT header is not sent at all
c.content.headers.do_not_track = True

## Whether host blocking is enabled.
## Type: Bool
c.content.host_blocking.enabled = True

## List of URLs of lists which contain hosts to block.  The file can be
## in one of the following formats:  - An `/etc/hosts`-like file - One
## host per line - A zip-file of any of the above, with either only one
## file, or a file named   `hosts` (with any extension).
## Type: List of Url
c.content.host_blocking.lists = ['https://www.malwaredomainlist.com/hostslist/hosts.txt', 'http://someonewhocares.org/hosts/hosts', 'http://winhelp2002.mvps.org/hosts.zip', 'http://malwaredomains.lehigh.edu/files/justdomains.zip', 'https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&mimetype=plaintext']

## List of domains that should always be loaded, despite being ad-
## blocked. Domains may contain * and ? wildcards and are otherwise
## required to exactly match the requested domain. Local domains are
## always exempt from hostblocking.
## Type: List of String
c.content.host_blocking.whitelist = ['piwik.org', 'eb.dk']


### STYLE ###

# Background color of the completion widget category headers
c.colors.completion.category.bg = 'qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #888888, stop:1 #505050)'

# Background color of the tab bar
# c.colors.tabs.bar.bg = '#009900'

# Background color of the unselected even tabs
c.colors.tabs.even.bg = '#888'
c.colors.tabs.even.fg = '#111'
c.colors.tabs.odd.bg = '#aaa'
c.colors.tabs.odd.fg = '#000'

# Background color of the unselected odd tabs
# c.colors.tabs.odd.bg = '#009900'

c.colors.tabs.selected.even.bg = '#eee'
c.colors.tabs.selected.even.fg = '#000'
c.colors.tabs.selected.odd.bg = '#eee'
c.colors.tabs.selected.odd.fg = '#000'

# Font used in the completion widget.
# Type: Font
c.fonts.completion.entry = '7pt Noto Sans'

# Font used in the completion categories.
# Type: Font
c.fonts.completion.category = '7pt Noto Sans'

# Font used for the debugging console.
# Type: QtFont
c.fonts.debug_console = '7pt Noto Sans'

# Font used for the downloadbar.
# Type: Font
c.fonts.downloads = '7pt Noto Sans'

# Font used for the hints.
# Type: Font
c.fonts.hints = 'bold 7pt Noto Sans'

# Font used in the keyhint widget.
# Type: Font
c.fonts.keyhint = '7pt Noto Sans'

# Font used for error messages.
# Type: Font
c.fonts.messages.error = '7pt Noto Sans'

# Font used for info messages.
# Type: Font
c.fonts.messages.info = '7pt Noto Sans'

# Font used for warning messages.
# Type: Font
c.fonts.messages.warning = '7pt Noto Sans'

# Font used for prompts.
# Type: Font
c.fonts.prompts = '7pt Noto Sans'


### STATUSBAR ###

# Font used in the statusbar.
c.fonts.statusbar = '7pt Noto Sans'

c.colors.statusbar.normal.bg = '#aaa'
c.colors.statusbar.normal.fg = '#111'

c.colors.statusbar.command.bg = '#555'
c.colors.statusbar.command.fg = '#EEE'

c.colors.statusbar.progress.bg = '#4A1'

c.colors.statusbar.url.fg = '#000'
c.colors.statusbar.url.success.https.fg = '#000'
c.colors.statusbar.url.hover.fg = '#000'
c.colors.statusbar.url.warn.fg = '#FF0000'

c.statusbar.padding = {
    'bottom': 4,
    'left': 0,
    'right': 10,
    'top': 4
}

c.statusbar.widgets = ['url', 'scroll', 'progress']


### TAB BAR ####

# Font used in the tab bar.
# Type: QtFont
c.fonts.tabs = '7pt Noto Sans'

c.tabs.title.format = '{audio} {title}'

c.tabs.title.alignment = 'center'

c.tabs.padding = {
    "top": 5,
    "bottom": 5,
    "left": 10,
    "right": 10
}
